@page
@model Rekordpool.Pages.Pool.IndexModel
@inject SignInManager<IdentityUser> SignInManager

@{
    ViewData["Title"] = "Pool";
}

<h1>Pool</h1>

<p>
    <a asp-page="Create">Add Track</a>
</p>

<p>
    <b>Note:</b>  you may sort <b>Artist Name</b>, <b>Title</b>, and <b>Added By</b> columns, 
    ascending or descending, by clicking on the column name.
</p>

<table class="table" id="myTable">
    <thead>
        <tr>
            <th onclick="sortTable(0)">
                @Html.DisplayNameFor(model => model.Track[0].ArtistName)
            </th>
            <th onclick="sortTable(1)">
                @Html.DisplayNameFor(model => model.Track[0].Title)
            </th>
            <th onclick="sortTable(2)">
                @Html.DisplayNameFor(model => model.Track[0].AddedBy)
            </th>
            <th>
                Embed Link
            </th>
            <th>
                <!-- for Delete -->
            </th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model.Track) 
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ArtistName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AddedBy)
                </td>

                @{
                    string iframe = "<iframe src=\"";

                    if (item.Link.Contains("spotify")) {
                        var spotifyLink = item.Link.Replace("/track", "/embed/track");
                        iframe = iframe + spotifyLink + "\" height=\"80\" ></iframe>";
                    }

                    if (item.Link.Contains("soundcloud")) {
                        iframe = item.Link;
                    }
                }
                <td>
                    @Html.Raw(iframe)
                </td>

                <td>
                    @if (SignInManager.IsSignedIn(User) && User.Identity.Name == item.AddedBy)
                    {
                        <a asp-page="./Delete" asp-route-id="@item.Link">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("myTable");   /*console.log(table);*/ console.log("myGoop!!!");
  switching = true;
  //Set the sorting direction to ascending:
  dir = "asc"; 
  /*Make a loop that will continue until
  no switching has been done:*/
  while (switching) {
    //start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /*Loop through all table rows (except the
    first, which contains table headers):*/
    for (i = 1; i < (rows.length - 1); i++) {
      //start by saying there should be no switching:
      shouldSwitch = false;
      /*Get the two elements you want to compare,
      one from current row and one from the next:*/
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /*check if the two rows should switch place,
      based on the direction, asc or desc:*/
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /*If a switch has been marked, make the switch
      and mark that a switch has been done:*/
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      //Each time a switch is done, increase this count by 1:
      switchcount ++;      
    } else {
      /*If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again.*/
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>
